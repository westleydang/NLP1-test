#most of the libraries needed
library(dplyr) #data manipulation
library(ggplot2) #visualizations
library(gridExtra) #viewing multiple plots together
library(tidytext) #text mining
library(wordcloud2) #creative visualizations

d0 <- read.csv("prince_raw_data.csv", stringsAsFactors = F)

prince <- d0 %>% 
  select(lyrics = text, song, year, album, peak, us_pop = US.Pop, us_rnb = US.R.B)


# check it out
head(prince)
glimpse(prince)

# look at one song
str(prince$lyrics[1])

fix.contractions <- function(doc) {
  # "won't" is a special case as it does not expand to "wo not"
  doc <- gsub("won't", "will not", doc)
  doc <- gsub("can't", "can not", doc)
  doc <- gsub("n't", " not", doc)
  doc <- gsub("'ll", " will", doc)
  doc <- gsub("'re", " are", doc)
  doc <- gsub("'ve", " have", doc)
  doc <- gsub("'m", " am", doc)
  doc <- gsub("'d", " would", doc)
  # 's could be 'is' or could be possessive: it has no expansion
  doc <- gsub("'s", "", doc)
  return(doc)
}

prince$lyrics <- sapply(prince$lyrics, fix.contractions)

# function to remove special characters
removeSpecialChars <- function(x) gsub("[^a-zA-Z0-9 ]", " ", x)
# remove special characters
prince$lyrics <- sapply(prince$lyrics, removeSpecialChars)


# convert everything to lower case
prince$lyrics <- sapply(prince$lyrics, tolower)
str(prince[139, ]$lyrics, nchar.max = 300)

summary(prince)

#create the decade column
prince <- prince %>%
  mutate(decade = 
           ifelse(prince$year %in% 1978:1979, "1970s", 
                  ifelse(prince$year %in% 1980:1989, "1980s", 
                         ifelse(prince$year %in% 1990:1999, "1990s", 
                                ifelse(prince$year %in% 2000:2009, "2000s", 
                                       ifelse(prince$year %in% 2010:2015, "2010s", 
                                              "NA"))))))

#create the chart level column
prince <- prince %>%
  mutate(chart_level = 
           ifelse(prince$peak %in% 1:10, "Top 10", 
                  ifelse(prince$peak %in% 11:100, "Top 100", "Uncharted")))

#create binary field called charted showing if a song hit the charts at all
prince <- prince %>%
  mutate(charted = 
           ifelse(prince$peak %in% 1:100, "Charted", "Uncharted"))

#save the new dataset to .csv for use in later tutorials
write.csv(prince, file = "prince_new.csv")

prince %>%
  filter(decade != "NA")) %>%
  dplyr::group_by(decade, charted) %>%
  summarize(n_songs = n()) %>%
  ggplot(aes(x = decade, y = n_songs, fill = charted)) + 
  geom_bar(stat="identity")


undesirable_words <- c("prince", "chorus", "repeat", "lyrics", 
                       "theres", "bridge", "fe0f", "yeah", "baby", 
                       "alright", "wanna", "gonna", "chorus", "verse", 
                       "whoa", "gotta", "make", "miscellaneous", "2", 
                       "4", "ooh", "uurh", "pheromone", "poompoom", "3121", 
                       "matic", " ai ", " ca ", " la ", "hey", " na ", 
                       " da ", " uh ", " tin ", "  ll", "transcription",
                       "repeats")


t <- prince %>% 
  unnest_tokens(word, lyrics) %>%
  anti_join(stop_words) %>%
  filter(!word %in% undesirable_words) %>%
  distinct() %>%
  filter(nchar(word) > 3)

head(sample(t$word, 20), 20)

t[t$word == "race",] %>% 
  select(song, word, year)

# by freq

t %>% 
  # filter(year == 2009) %>%
  group_by(word) %>%
  summarize(count = n()) %>%
  arrange(desc(count))
